import{R as e,r as i}from"./index-DQDNmYQF.js";import{c as f}from"./index-QCImZZ3W.js";import{i as W}from"./i18n-kNgCcl76.js";import{E as L}from"./ErrorFieldMessage-eNbkZ9Td.js";const U=(r,t,o)=>{let a;return r?a=r:t&&o?console.error("You should use countryCodeAndNumberFieldMessage when both countryCode and number contains an error"):t?a=t:o&&(a=o),a},l=e.forwardRef(({numberInputProps:r,countryCodeInputProps:t,countryCodeFieldMessage:o,numberFieldMessage:a,countryCodeAndNumberFieldMessage:m,className:x,extraMargin:O,isMobileNumber:B,locale:b="nb"},j)=>{var v;const h=i.useRef(null),E=i.useRef(null);i.useImperativeHandle(j,()=>({get country(){return h.current},get number(){return E.current}}));const n=U(m,o,a),R=i.useId(),y=i.useId(),D=i.useId(),p=e.isValidElement(n)?(v=n==null?void 0:n.props)==null?void 0:v.id:D,g=W[["nb","nn","en"].indexOf(b)!==-1?b:"nb"];return e.createElement("div",{className:f("ffe-phone-number","ffe-input-group",{"ffe-input-group--message":n},{"ffe-input-group--no-extra-margin":!O},x)},e.createElement("div",{className:"ffe-phone-number__input-group"},e.createElement("div",{className:"ffe-phone-number__country-code"},e.createElement("label",{className:"ffe-form-label",htmlFor:y},g.COUNTRY_CODE),e.createElement("div",{className:"ffe-phone-number__input-group"},e.createElement("span",{className:f("ffe-phone-number__plus","ffe-default-mode")},"+"),e.createElement("input",{ref:h,id:y,value:(t==null?void 0:t.value)??"47",className:f("ffe-input-field","ffe-phone-number__country-code-input","ffe-default-mode"),type:"tel","aria-invalid":!!(o||m),"aria-describedby":o||m?p:void 0,...t}))),e.createElement("div",{className:"ffe-phone-number__number"},e.createElement("label",{className:"ffe-form-label",htmlFor:R},B?g.MOBILE_NUMBER:g.PHONE_NUMBER),e.createElement("input",{ref:E,id:R,type:"tel",className:f("ffe-input-field","ffe-phone-number__phone-input","ffe-default-mode"),"aria-invalid":!!(a||m),"aria-describedby":a||m?p:void 0,...r}))),typeof n=="string"&&e.createElement(L,{as:"p",id:p},n),e.isValidElement(n)&&e.cloneElement(n,{id:p}))});l.__docgenInfo={description:"",methods:[{name:"country",docblock:null,modifiers:["get"],params:[],returns:null},{name:"number",docblock:null,modifiers:["get"],params:[],returns:null}],displayName:"PhoneNumber",props:{numberInputProps:{required:!1,tsType:{name:"ReactComponentPropsWithoutRef",raw:"React.ComponentPropsWithoutRef<'input'>",elements:[{name:"literal",value:"'input'"}]},description:""},countryCodeInputProps:{required:!1,tsType:{name:"ReactComponentPropsWithoutRef",raw:"React.ComponentPropsWithoutRef<'input'>",elements:[{name:"literal",value:"'input'"}]},description:""},locale:{required:!1,tsType:{name:"union",raw:"'nn' | 'nb' | 'en'",elements:[{name:"literal",value:"'nn'"},{name:"literal",value:"'nb'"},{name:"literal",value:"'en'"}]},description:"",defaultValue:{value:"'nb'",computed:!1}},countryCodeFieldMessage:{required:!1,tsType:{name:"union",raw:"string | React.ReactElement<{ id: string }>",elements:[{name:"string"},{name:"ReactReactElement",raw:"React.ReactElement<{ id: string }>",elements:[{name:"signature",type:"object",raw:"{ id: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}}]}}]}]},description:"String or ErrorFieldMessage component with message"},numberFieldMessage:{required:!1,tsType:{name:"union",raw:"string | React.ReactElement<{ id: string }>",elements:[{name:"string"},{name:"ReactReactElement",raw:"React.ReactElement<{ id: string }>",elements:[{name:"signature",type:"object",raw:"{ id: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}}]}}]}]},description:"String or ErrorFieldMessage component with message"},countryCodeAndNumberFieldMessage:{required:!1,tsType:{name:"union",raw:`| string
| React.ReactElement<{ id: string }>`,elements:[{name:"string"},{name:"ReactReactElement",raw:"React.ReactElement<{ id: string }>",elements:[{name:"signature",type:"object",raw:"{ id: string }",signature:{properties:[{key:"id",value:{name:"string",required:!0}}]}}]}]},description:`String or ErrorFieldMessage component with message,
this should be set when both countryCode and number is in an invalid state.
If both countryCodeFieldMessage and numberFieldMessage is set and not this prop,
the component will throw an Error.`},className:{required:!1,tsType:{name:"string"},description:""},extraMargin:{required:!1,tsType:{name:"boolean"},description:"Reserve space for showing `fieldMessage`s so content below don't move\n vertically if an errormessage shows up. Note that this will only reserve\n space for one line of content, so keep messages short."},isMobileNumber:{required:!1,tsType:{name:"boolean"},description:'If True label is changed from "Phone number" to "Mobile number"'}}};const V={title:"Komponenter/Form/PhoneNumber",component:l},s={args:{numberInputProps:{},numberFieldMessage:"",countryCodeFieldMessage:"",countryCodeAndNumberFieldMessage:"",extraMargin:!1,isMobileNumber:!0,locale:"nb"},render:r=>e.createElement(l,{...r})},d={args:{...s.args,countryCodeFieldMessage:"Dette feltet er påkrevd"},render:r=>e.createElement(l,{...r})},u={args:{...s.args,numberFieldMessage:"Dette feltet er påkrevd"},render:r=>e.createElement(l,{...r})},c={args:{...s.args,countryCodeAndNumberFieldMessage:"Både landkode og telefonnummer feltene er påkrevd"},render:r=>e.createElement(l,{...r})};var N,_,w;s.parameters={...s.parameters,docs:{...(N=s.parameters)==null?void 0:N.docs,source:{originalSource:`{
  args: {
    numberInputProps: {},
    numberFieldMessage: '',
    countryCodeFieldMessage: '',
    countryCodeAndNumberFieldMessage: '',
    extraMargin: false,
    isMobileNumber: true,
    locale: 'nb'
  },
  render: args => <PhoneNumber {...args} />
}`,...(w=(_=s.parameters)==null?void 0:_.docs)==null?void 0:w.source}}};var M,S,P;d.parameters={...d.parameters,docs:{...(M=d.parameters)==null?void 0:M.docs,source:{originalSource:`{
  args: {
    ...Standard.args,
    countryCodeFieldMessage: 'Dette feltet er påkrevd'
  },
  render: args => <PhoneNumber {...args} />
}`,...(P=(S=d.parameters)==null?void 0:S.docs)==null?void 0:P.source}}};var k,F,q;u.parameters={...u.parameters,docs:{...(k=u.parameters)==null?void 0:k.docs,source:{originalSource:`{
  args: {
    ...Standard.args,
    numberFieldMessage: 'Dette feltet er påkrevd'
  },
  render: args => <PhoneNumber {...args} />
}`,...(q=(F=u.parameters)==null?void 0:F.docs)==null?void 0:q.source}}};var C,T,I;c.parameters={...c.parameters,docs:{...(C=c.parameters)==null?void 0:C.docs,source:{originalSource:`{
  args: {
    ...Standard.args,
    countryCodeAndNumberFieldMessage: 'Både landkode og telefonnummer feltene er påkrevd'
  },
  render: args => <PhoneNumber {...args} />
}`,...(I=(T=c.parameters)==null?void 0:T.docs)==null?void 0:I.source}}};const H=["Standard","ErrorCountryCode","ErrorNumber","ErrorBoth"],J=Object.freeze(Object.defineProperty({__proto__:null,ErrorBoth:c,ErrorCountryCode:d,ErrorNumber:u,Standard:s,__namedExportsOrder:H,default:V},Symbol.toStringTag,{value:"Module"}));export{d as E,J as P,s as S,u as a,c as b};
