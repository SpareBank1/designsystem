import{R as e}from"./index-DQDNmYQF.js";import{f as u}from"./fixedForwardRef-DqyCgkTx.js";import{c as p}from"./index-QCImZZ3W.js";function d(i,a){const{as:l="button",buttonType:o,className:s,leftIcon:n,rightIcon:t,size:r="md",iconOnly:m=!1,children:c,...f}=i;return e.createElement(l,{className:p("ffe-inline-button",`ffe-inline-button--${r}`,`ffe-inline-button--${o}`,{"ffe-inline-button--icon-only":m},s),...f,ref:a},n&&e.cloneElement(n,{className:"ffe-inline-button__icon ffe-inline-button__icon--left",size:"md"}),e.createElement("span",{className:"ffe-inline-button__label"},c),t&&e.cloneElement(t,{className:"ffe-inline-button__icon ffe-inline-button__icon--right",size:"md"}))}const b=u(d);b.__docgenInfo={description:`Internal component
@ignore`,methods:[],displayName:"InlineBaseButton",props:{as:{required:!1,tsType:{name:"As"},description:""},buttonType:{required:!0,tsType:{name:"union",raw:"'tertiary' | 'back' | 'expand'",elements:[{name:"literal",value:"'tertiary'"},{name:"literal",value:"'back'"},{name:"literal",value:"'expand'"}]},description:`Enum of supported prop types. Used internally only.
@ignore`},leftIcon:{required:!1,tsType:{name:"ReactElement"},description:"Icon shown to the left of the label"},rightIcon:{required:!1,tsType:{name:"ReactElement"},description:"Icon shown to the right of the label"},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"Size of the button, default md."},iconOnly:{required:!1,tsType:{name:"boolean"},description:"Using only an icon, no label"}}};export{b as I};
