.ffe-radio-switch {
    --radio-switch-border-color: var(--ffe-color-border-primary-default);
    --inner-circle-color: var(--ffe-color-surface-primary-default);
    --radio-switch-background: var(--ffe-color-surface-primary-default);

    color: var(--ffe-color-foreground-default);
    padding: var(--ffe-spacing-xs) var(--ffe-spacing-md) var(--ffe-spacing-xs) var(--ffe-spacing-xs);
    grid-template-columns: auto 1fr;
    grid-column-gap: var(--ffe-spacing-xs);
    position: relative;
    border: var(--ffe-g-border-width) solid var(--radio-switch-border-color);
    border-radius: 48px;
    display: inline-grid;
    place-items: center;
    min-width: 100px;
    text-align: left;
    font-family: var(--ffe-g-font);
    font-variant-numeric: tabular-nums;
    cursor: pointer;
    transition:
        color var(--ffe-transition-duration) var(--ffe-ease),
        border var(--ffe-transition-duration) var(--ffe-ease),
        box-shadow var(--ffe-transition-duration) var(--ffe-ease),
        background-color var(--ffe-transition-duration) var(--ffe-ease);
    margin-bottom: var(--ffe-spacing-2xs);
    margin-top: var(--ffe-spacing-sm);
    line-height: 1.5;
    overflow-wrap: anywhere;
    background-color: var(--radio-switch-background);

    &::before {
        content: '';
        left: 12px;
        top: 8px;
        background-color: var(--inner-circle-color);
        border: var(--ffe-g-border-width) solid var(--radio-switch-border-color);
        transition: all var(--ffe-transition-duration) var(--ffe-ease);
        width: 24px;
        height: 24px;
        border-radius: 50%;
        pointer-events: none;
    }

    @media (hover: hover) and (pointer: fine) {
        &:hover {
            --inner-circle-color: var(--ffe-color-surface-primary-default);

            background-color: var(--ffe-color-surface-primary-default-hover);
            border-color: var(--ffe-color-border-primary-default-hover);
            box-shadow: var(--ffe-g-border-focus-box-shadow) var(--ffe-color-border-primary-default-hover);
        }
    }

    &:active {
        background-color: var(--ffe-color-surface-primary-default-pressed);
        border-color: var(--ffe-color-border-primary-default-pressed);
        box-shadow: var(--ffe-g-border-focus-box-shadow) var(--ffe-color-border-primary-default-pressed);
    }

    @media (min-width: @breakpoint-sm) {
        margin-bottom: 0;
    }

    &:has(+ input + .ffe-radio-switch) {
        margin-right: var(--ffe-spacing-xs);
    }

    &--condensed {
        height: 38px;
    }
}

.ffe-radio-input {
    &:where(:checked, :focus, :active, :hover)+.ffe-radio-switch::before {
        outline: none;
    }

    @media (hover: hover) and (pointer: fine) {
        &:hover+.ffe-radio-switch {
            --radio-switch-background: var(--ffe-color-surface-primary-default-hover);
        }
    }

    &:checked+.ffe-radio-switch {
        --inner-circle-color: var(--ffe-color-fill-primary-default-pressed);
        --radio-switch-background: var(--ffe-color-surface-primary-default);
        --radio-switch-border-color: var(--ffe-color-border-interactive-selected);

        box-shadow: var(--ffe-g-border-focus-box-shadow) var(--radio-switch-border-color);

        &::before {
            border: 5px solid var(--ffe-color-surface-primary-default);
            outline: 2px solid var(--ffe-color-border-primary-emphasis);
            background-color: var(--ffe-color-fill-primary-selected-default);
        }

        @media (hover: hover) and (pointer: fine) {
            &:hover {
                background-color: var(--ffe-color-surface-primary-default-hover);
            }
        }

        &:active {
            background-color: var(--ffe-color-surface-primary-default-pressed);
        }
    }

    &:focus-visible+.ffe-radio-switch {
        outline: var(--ffe-g-outline-width) solid var(--ffe-color-border-interactive-focus);
        outline-offset: var(--ffe-g-outline-offset);
    }

    &:disabled+.ffe-radio-switch {
        --radio-switch-border-color: var(--ffe-color-border-primary-subtle);
        --radio-switch-background: var(--ffe-color-surface-primary-default);

        cursor: not-allowed;
        color: var(--ffe-color-foreground-subtle);
    }

    &[aria-invalid='true']+.ffe-radio-switch {
        --radio-switch-border-color: var(--ffe-color-border-feedback-critical);
        --radio-switch-background: var(--ffe-color-surface-feedback-critical);
        --inner-circle-color: var(--ffe-color-surface-primary-default);

        box-shadow: var(--ffe-g-border-focus-box-shadow) var(--ffe-color-border-feedback-critical);

        &::before {
            box-shadow: var(--ffe-g-border-focus-box-shadow) var(--ffe-color-border-feedback-critical);
        }

        @media (hover: hover) and (pointer: fine) {
            &:hover {
                border-color: var(--ffe-color-border-feedback-critical);
                background-color: var(--ffe-color-surface-feedback-critical);
            }
        }
    }
}